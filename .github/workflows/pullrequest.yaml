name: Create temporary env with Argo
on: 
  pull_request:
    branches:
      - main

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    outputs:
      TAG: ${{ steps.vars.outputs.TAG }}
    
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Set outputs
        id: vars
        run: |
          echo "image_version=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "image_name=devlopesbernardo/hello-world-go" >> $GITHUB_ENV
          image_tag=$(git rev-parse --short HEAD)
          echo TAG=$image_tag >> $GITHUB_OUTPUT
          echo devlopesbernardo/hello-world-go:$image_tag

      - name: Log in to Docker Hub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: devlopesbernardo/hello-world-go:pr-${{env.image_version}}

          
  deploy_dev:
      name: Deploys to development environment
      runs-on: ubuntu-latest
      needs: [push_to_registry]
      steps:

        - name: Checkout the other repository
          uses: actions/checkout@v2
          with:
            repository: 'bernardolsp/aulao-pipeline' # replace with your repository
            token: ${{ secrets.PAT }} # use the PAT you saved as a secret
            path: 'aulao-pipeline' # this is the directory where the other repo will be checked out
            
        - name: Run sed on the other repository
          env:
            IMAGE_TAG: ${{ needs.push_to_registry.outputs.TAG }}
          run: |
            sed -i "/^ *image:/s|.*|  image: devlopesbernardo/hello-world-go:pr-$IMAGE_TAG|" ./aulao-pipeline/dev/helloworld-docker/helm/values.yaml

        - name: Commit and push changes
          run: |
            cd aulao-pipeline
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git checkout -b "feat/pr-$IMAGE_TAG"
            git add .
            git commit -am "Update version of helloworld-go image in dev"
            git push --set-upstream origin "feat/pr-$IMAGE_TAG"
            gh pr create -B main -H "feat/pr-$IMAGE_TAG" --title "Merge PR $IMAGE_TAG into app' --body 'Created by Github action"
          env:
            GITHUB_TOKEN: ${{ secrets.PAT }}
            IMAGE_TAG: ${{ needs.push_to_registry.outputs.TAG }}
